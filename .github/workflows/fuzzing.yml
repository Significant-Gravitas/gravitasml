name: Fuzzing Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  fuzz:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    
    - name: Install project
      run: poetry install --no-interaction
    
    - name: Run quick fuzz tests
      run: |
        poetry run pytest tests/test_fuzzing.py \
          --hypothesis-max-examples=100 \
          --hypothesis-seed=random \
          -v
    
    - name: Run thorough fuzz tests (scheduled only)
      if: github.event_name == 'schedule'
      run: |
        poetry run pytest tests/test_fuzzing.py \
          --hypothesis-max-examples=10000 \
          --hypothesis-seed=random \
          --hypothesis-show-statistics \
          -v
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: fuzzing-results-${{ matrix.python-version }}
        path: |
          .hypothesis/
          .pytest_cache/